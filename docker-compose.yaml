services:
  db:
    image: timescale/timescaledb:latest-pg14
    container_name: agroshield-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - timescale-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    build:
      context: .
      dockerfile: packages/data-access/Dockerfile.migrate
    container_name: agroshield-migrate
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

  api-server:
    build:
      context: .
      dockerfile: apps/api-server/Dockerfile
    container_name: agroshield-api
    ports:
      - "3001:3000"
    environment:
      - COMPOSE_BAKE=true
      - NODE_ENV=${NODE_ENV}
      
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}

      - RISK_MARGIN=${RISK_MARGIN}
      - OPS_COST=${OPS_COST}
      - PROJECT_PROFIT=${PROJECT_PROFIT}

      - OPEN_METEO_RATE_LIMIT=${OPEN_METEO_RATE_LIMIT}
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    restart: unless-stopped

volumes:
  timescale-data:
    
